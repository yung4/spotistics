{"version":3,"sources":["components/About.js","components/Login.js","components/Content/Header.js","api/aggregateData.js","components/Statistics/DateAdded.js","components/Statistics/ReleaseDate.js","api/parseData.js","api/apiRequest.js","components/Statistics/Statistics.js","components/TopArtists/TopArtistItem.js","components/TopArtists/TopArtists.js","components/TopTracks/TopTrackItem.js","components/TopTracks/TopTracks.js","components/History/HistoryItem.js","components/History/History.js","components/Navigation/PillNav.js","components/Navigation/StatsNavDropdown.js","components/Navigation/StatsNav.js","components/Content/Body.js","components/Content/Footer.js","components/Navigation/NavBar.js","components/Content/Home.js","api/auth.js","App.js","index.js"],"names":["About","style","textAlign","Component","loginStyle","Login","fontSize","Accordion","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","size","href","setUserInfo","setState","userImg","props","user","images","url","userName","display_name","e","logout","useState","show","setShow","handleClose","onClick","state","Image","className","src","width","height","roundedCircle","Modal","onHide","closeButton","Title","Footer","errorFunc","this","prevProps","prevState","Container","fluid","Row","Col","aggregateDates","songList","dateAdded","datesArray","i","length","duplicateDate","date","getDateAdded","getReleaseDate","j","tracksAdded","newDate","push","cleanArray","song","hasOwnProperty","timestamp","parsedDate","Date","parse","dateObj","day","getDate","month","getMonth","year","getFullYear","getDateObject","addedDate","getYear","releaseDate","newDatesArray","DateAdded","fetchData","dateArray","playlistItems","parseDateArray","xAxisDate","yAxisNumTracks","sort","chartData","labels","datasets","label","data","backgroundColor","redraw","options","maintainAspectRatio","distribution","scales","xAxes","type","time","unit","bounds","ticks","source","barPercentage","Math","pow","log10","yAxes","autoSkip","beginAtZero","dataset","layout","padding","right","left","ReleaseDate","setFullYear","autoSkipPadding","minRotation","bottom","parseData","parsedData","dataItems","items","id","title","artistData","name","uri","image","chooseSmallestImage","genres","arrToString","parseArtists","songData","parseTrackItem","parseTracks","historyData","track","playedAt","formatDate","played_at","parseHistory","artistName","artists","albumTitle","album","release_date","parsePlaylistList","description","parsePlaylistItems","added_at","array","arrLen","newString","toString","smallestImg","hour","getHours","minute","getMinutes","second","getSeconds","spotifyRequestMe","accessToken","a","$","ajax","headers","success","response","error","console","log","handleError","status","spotifyRequestPlaylist","playlistObj","getTop","timeRange","limit","offset","getTopArtists","getTopTracks","getRecentlyPlayed","params","getPlaylistList","baseURL","getNext","getPlaylistItems","playlistID","window","location","replace","process","Statistics","fetchPlaylistData","selectedPlaylist","checkNext","statsMode","TopArtistItem","ListGroup","Item","action","artist","xs","margin","TopArtists","topArtists","map","key","TopTrackItem","TopTracks","topTracks","HistoryItem","paddingLeft","paddingRight","History","history","PillNav","Nav","defaultActiveKey","onSelect","updateTimeRangeState","Link","StatsNavDropdown","NavDropdown","playlist","StatsNav","selectedMode","chooseMode","defaultactivekey","choosePlaylist","playlistList","fetchTop","hashFragment","fetchPlaylists","playlistListObj","updatePlaylistList","fetchHistory","object","next","nextObject","concat","updateStatsModeState","mode","updateSelectedPlaylist","contentType","aboutModal","rel","target","fill","justify","selectedView","setView","Home","viewType","NavBar","paramObj","getAuthorization","indexOf","paramArr","slice","split","tokenType","expiresIn","App","loggedInStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afb932a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{textAlign: 'left'}}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tSpotistics is a completely client sided React application that shows your Spotify listening habits. \r\n\t\t\t\t\tThis means that your browser does all the work and that none of your information is being stored on a server.\r\n\t\t\t\t\tThis application does need access to your Spotify account to pull the necessary data from the Spotify API.\r\n\t\t\t\t</p>\r\n\t\t\t\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEven though this type of application has been done before, I always wanted to make my own version. \r\n\t\t\t\t\tWorking on Spotistics has given me good experience with JavaScript, ReactJS, and web development in general.\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Accordion, Button, Card } from 'react-bootstrap';\r\n\r\nimport About from './About';\r\n\r\n//import LoginImage from '../assets/From Up On Poppy Hill (17).png'\r\n\r\nvar link = ('https://accounts.spotify.com/authorize?' + \r\n            'client_id=' + process.env.REACT_APP_CLIENT_ID + \r\n            '&redirect_uri=' + process.env.REACT_APP_REDIRECT_URI + \r\n\t\t\t'&scope=' + process.env.REACT_APP_SCOPES +\r\n            '&response_type=' + process.env.REACT_APP_RESPONSE_TYPE +\r\n            '&show_dialog=true' \r\n            );\r\n\t\t\t\r\n\t\t\t//TODO: figure out how to use state for added security\r\n\r\nvar loginStyle = {\r\n\ttextAlign: 'center',\r\n\t//backgroundImage: `url(${LoginImage})`\r\n}\r\n\r\nclass Login extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={loginStyle}>\r\n\t\t\t\t<h1 style={{ fontSize: 50 }}>Spotistics</h1>\r\n\t\t\t\t\r\n\t\t\t\t<Accordion>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t<Card.Body><About/></Card.Body>\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Accordion>\r\n\t\t\t\t\r\n\t\t\t\t<Button size='lg' href={link}>\r\n\t\t\t\t\tLogin to Spotify\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;","import React, { Component, useState  } from 'react';\r\nimport { Container, Row, Col, Modal, Button, Image } from 'react-bootstrap';\r\n\r\nimport '../../style/header.css';\r\n\r\nclass Header extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tuserImg: '',\r\n\t\t\tuserName: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setUserInfo();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.user !== this.props.user) {\r\n\t\t\tthis.setUserInfo();\r\n\t\t}\r\n\t}\r\n\r\n\tsetUserInfo = () => {\r\n\t\ttry {\r\n\t\t\tthis.setState({ userImg: this.props.user.images[0].url });\r\n\t\t\tthis.setState({ userName: this.props.user.display_name });\r\n\t\t} catch (e) {\r\n\t\t\t//console.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tlogout = () => {\r\n\t\tconst [show, setShow] = useState(false);\r\n\r\n\t\tconst handleClose = () => setShow(false);\r\n\t\tconst handleShow = () => setShow(true);\r\n\t\t\r\n\t\tconst imgSize = 50;\r\n\t\t\r\n\t\t//console.log(this.state.userName);\r\n\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button variant=\"link\" onClick={handleShow}>\r\n\t\t\t\t\t{this.state.userName}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Image className='userImg'\r\n\t\t\t\t\t\t\tsrc={this.state.userImg}\r\n\t\t\t\t\t\t\twidth={imgSize} height={imgSize}\r\n\t\t\t\t\t\t\troundedCircle \r\n\t\t\t\t\t/>\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Not you?</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>Click this to logout!</Modal.Body>\r\n\t\t\t\t\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={this.props.errorFunc}>\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t  </Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\t\r\n\t\treturn (\r\n\t\t\t<Container fluid className='header'>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className='my-auto'>\t\t\t\t\r\n\t\t\t\t\t\t\t<h1>Spotistics</h1>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Col className='logout'>\r\n\t\t\t\t\t\t\t<this.logout/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Header;","function aggregateDates(songList, dateAdded = true) {\r\n    //console.log(songList);\r\n\r\n    var datesArray = [];\r\n\r\n    for (var i = 0; i < songList.length; i++) {\r\n        //console.log(songList[i]);\r\n        var duplicateDate = -1;\r\n\r\n        //if releaseDate = true, parses release year and if not parses date added\r\n        var date = dateAdded ? getDateAdded(songList[i]) : getReleaseDate(songList[i]);\r\n\r\n        for (var j = 0; j < datesArray.length; j++) {\r\n            if (date === datesArray[j].date) {\r\n                //console.log('duplicate date)');\r\n\r\n                duplicateDate = j;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (duplicateDate !== -1) {\r\n            //console.log(duplicateDate);\r\n            datesArray[j].tracksAdded++;\r\n        } else {\r\n            var newDate = {\r\n                date: date,\r\n                tracksAdded: 1\r\n            }\r\n\r\n            datesArray.push(newDate);\r\n        }\r\n    }\r\n\r\n    //console.log(datesArray)\r\n\r\n    return cleanArray(datesArray);\r\n}\r\n\r\nfunction getDateAdded(song) {\r\n    //console.log(song);\r\n\r\n    if (song.hasOwnProperty('addedDate')) {\r\n        return getDateObject(song.addedDate);\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getReleaseDate(song) {\r\n    if (song.hasOwnProperty('releaseDate')) {\r\n        const year = getYear(song.releaseDate);\r\n        //console.log(year);\r\n        return year;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getDateObject(timestamp) {\r\n    const parsedDate = Date.parse(timestamp);\r\n    const dateObj = new Date(parsedDate);\r\n\r\n\tconst day = dateObj.getDate();\r\n\tconst month = dateObj.getMonth() + 1;\r\n    const year = dateObj.getFullYear();\r\n\r\n    const dateString = `${year}-${month}-${day}`;\r\n    \r\n    return dateString;\r\n}\r\n\r\nfunction getYear(timestamp) {\r\n    const parsedDate = Date.parse(timestamp);\r\n    const dateObj = new Date(parsedDate);\r\n\r\n    const year = dateObj.getFullYear();\r\n    //console.log(year);\r\n    return year;\r\n}\r\n\r\nfunction cleanArray(datesArray) {\r\n    var newDatesArray = [];\r\n\r\n    for (var i = 0; i < datesArray.length; i++) {\r\n        if (datesArray[i].date) {\r\n            newDatesArray.push(datesArray[i]);\r\n        }\r\n    }\r\n\r\n    return newDatesArray;\r\n}\r\n\r\nexport { aggregateDates };","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { aggregateDates } from '../../api/aggregateData';\r\n\r\nclass DateAdded extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            redraw: true,\r\n            data: {\r\n                labels: [],\r\n                datasets: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.playlistItems !== this.props.playlistItems) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    fetchData = () => {\r\n        const dateArray = aggregateDates(this.props.playlistItems, true);\r\n        //console.log(dateArray);\r\n        this.parseDateArray(dateArray);\r\n    }\r\n\r\n    parseDateArray = (dateArray) => {\r\n        //console.log(dateArray);\r\n        var xAxisDate = [];\r\n        var yAxisNumTracks = [];\r\n\r\n        dateArray.sort();\r\n\r\n        for (var i = 0; i < dateArray.length; i++) {\r\n            //console.log(dateArray[i]);\r\n            xAxisDate[i] = new Date(dateArray[i].date);\r\n            yAxisNumTracks[i] = dateArray[i].tracksAdded;\r\n\r\n        }\r\n\r\n        var chartData = {\r\n            labels: xAxisDate,\r\n\r\n            datasets: [\r\n                {\r\n                    label: 'Tracks Added',\r\n                    data: yAxisNumTracks,\r\n                    backgroundColor: '#0074d9' \r\n                }\r\n            ] \r\n        }\r\n\r\n        //console.log(chartData);\r\n\r\n        this.setState({ data: chartData });\r\n    }\r\n\r\n\trender() {\r\n        //console.log(this.state.data);\r\n        //console.log(this.state.data.labels);\r\n        //console.log(this.state.data.labels.length);\r\n        \r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Container>\r\n                <Bar\r\n                    data = {this.state.data}\r\n                    width={300}\r\n                    height={300}\r\n                    redraw={this.state.redraw}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        distribution: 'series',\r\n                        scales: {\r\n                            xAxes: [{\r\n                                type: 'time',\r\n                                time: {\r\n                                    unit: 'year'\r\n                                },\r\n                                bounds: 'data',\r\n                                ticks: {\r\n                                    source: 'auto',\r\n                                },\r\n                                barPercentage: Math.pow(Math.log10(this.state.data.labels.length), 1.5)\r\n                            }],\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    autoSkip: true,\r\n                                    beginAtZero: true,\r\n                                }\r\n                            }],\r\n                        },\r\n                        dataset: {\r\n                            barPercentage: 4\r\n                        },\r\n                        layout: {\r\n                            padding: {\r\n                                right: 20,\r\n                                left: 10\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default DateAdded;","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { aggregateDates } from '../../api/aggregateData';\r\n\r\nclass ReleaseDate extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            redraw: true,\r\n            data: {\r\n                labels: [],\r\n                datasets: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.playlistItems !== this.props.playlistItems) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    fetchData = () => {\r\n        const dateArray = aggregateDates(this.props.playlistItems, false);\r\n        //console.log(dateArray);\r\n        this.parseDateArray(dateArray);\r\n    }\r\n\r\n    parseDateArray = (dateArray) => {\r\n        //console.log(dateArray);\r\n        var xAxisDate = [];\r\n        var yAxisNumTracks = [];\r\n\r\n        dateArray.sort();\r\n\r\n        for (var i = 0; i < dateArray.length; i++) {\r\n            //console.log(dateArray[i]);\r\n            xAxisDate[i] = new Date(0).setFullYear(dateArray[i].date);\r\n            yAxisNumTracks[i] = dateArray[i].tracksAdded;\r\n\r\n        }\r\n\r\n        var chartData = {\r\n            labels: xAxisDate,\r\n\r\n            datasets: [\r\n                {\r\n                    label: 'Track Release Year',\r\n                    data: yAxisNumTracks,\r\n                    backgroundColor: '#0074d9'\r\n                }\r\n            ] \r\n        }\r\n\r\n        //console.log(chartData);\r\n\r\n        this.setState({ data: chartData });\r\n    }\r\n\r\n\trender() {\r\n        //console.log(this.state.data);\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Container>\r\n                <Bar\r\n                    data = {this.state.data}\r\n                    width={300}\r\n                    height={300}\r\n                    redraw={this.state.redraw}\r\n                    options={{ \r\n                        maintainAspectRatio: false,\r\n                        distribution: 'series',\r\n                        scales: {\r\n                            xAxes: [{\r\n                                type: 'time',\r\n                                time: {\r\n                                    unit: 'year'\r\n                                },\r\n                                bounds: 'data',\r\n                                ticks: {\r\n                                    source: 'labels',\r\n                                    autoSkip: true,\r\n                                    autoSkipPadding: 5,\r\n                                    minRotation: (this.state.data.labels.length < 10) ? 0 : 45,\r\n                                    padding: 5\r\n                                },\r\n                            }],\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                }\r\n                            }],\r\n                        },\r\n                        layout: {\r\n                            padding: {\r\n                                right: 20,\r\n                                left: 10,\r\n                                bottom: 15\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default ReleaseDate;","function parseData(data) {\r\n\tvar parsedData = [];\r\n\t//console.log(data);\r\n\t\r\n\tif (data.type === 'user') {\r\n\t\treturn data;\r\n\t}\r\n\t\r\n\tvar dataItems = data.items;\r\n\r\n\tif (dataItems.length === 0) {\r\n\t\tparsedData[0] = {\r\n\t\t\tid: 0,\r\n\t\t\ttitle: 'Data Not Found',\r\n\t\t}\r\n\t\treturn parsedData;\r\n\t}\r\n\t\r\n\tif (dataItems[0].type === 'artist') {\r\n\t\tparsedData = parseArtists(dataItems);\r\n\t} else if (dataItems[0].type === 'track') {\r\n\t\tparsedData = parseTracks(dataItems);\r\n\t} else {\r\n\t\t//console.log('error:');\r\n\t\t//console.log(dataItems);\r\n\t\t//throw error\r\n\t\tparsedData = parseHistory(dataItems);\r\n\t}\r\n\t\r\n\treturn parsedData;\r\n}\r\n\r\n// helper parse functions\r\nfunction parseTrackItem(track) {\r\n\treturn {\r\n\t\tid: track.id,\r\n\t\ttitle: track.name,\r\n\t\tartistName: track.artists[0].name,\r\n\t\talbumTitle: track.album.name,\r\n\t\thref: track.uri,\r\n\t\timage: chooseSmallestImage(track.album.images),\r\n\t\treleaseDate: track.album.release_date,\r\n\t\ttype: track.type\r\n\t}\r\n}\r\n\r\nfunction parseTracks(songData) {\r\n\tvar parsedData = [];\r\n\t//console.log(songData);\r\n\t\r\n\tfor (var i = 0; i < songData.length; i++) {\r\n\t\t//console.log(songData[i]);\r\n\t\tparsedData[i] = parseTrackItem(songData[i]);\r\n\t\tparsedData[i].id = i + 1;\r\n\t}\r\n\t\r\n\t//console.log(parsedData);\r\n\t\r\n\treturn parsedData;\r\n}\r\n\r\nfunction parseArtists(artistData) {\r\n\tvar parsedData = [];\r\n\t\r\n\tfor (var i = 0; i < artistData.length; i++) {\r\n\t\t//console.log(songData[i]);\r\n\t\tparsedData[i] = {\r\n\t\t\tid: i + 1,\r\n\t\t\ttitle: artistData[i].name,\r\n\t\t\thref: artistData[i].uri,\r\n\t\t\timage: chooseSmallestImage(artistData[i].images),\r\n\t\t\tgenres: arrToString(artistData[i].genres),\r\n\t\t\ttype: artistData[i].type\r\n\t\t}\r\n\t}\r\n\r\n\t//console.log(parsedData);\r\n\t\r\n\treturn parsedData;\r\n}\r\n\r\nfunction parseHistory(historyData) {\r\n\t//console.log(historyData);\r\n\tvar parsedData = [];\r\n\r\n\tfor (var i = 0; i < historyData.length; i++) {\r\n\t\tparsedData[i] = parseTrackItem(historyData[i].track);\r\n\t\tparsedData[i].id = i + 1;\r\n\t\tparsedData[i].playedAt = formatDate(historyData[i].played_at);\r\n\t}\r\n\r\n\treturn parsedData;\r\n}\r\n\r\nfunction parsePlaylistList(data) {\r\n\t//console.log(data)\r\n\tvar parsedData = [];\r\n\tdata = data.items;\r\n\r\n\tfor (var i = 0; i < data.length; i++) {\r\n\t\tparsedData[i] = {\r\n\t\t\tid: data[i].id,\r\n\t\t\ttitle: data[i].name,\r\n\t\t\tdescription: data[i].description,\r\n\t\t\thref: data[i].uri,\r\n\t\t\timage: chooseSmallestImage(data[i].images),\r\n\t\t\ttype: data[i].type\r\n\t\t}\r\n\t}\r\n\r\n\t//console.log(parsedData);\r\n\treturn parsedData;\r\n}\r\n\r\nfunction parsePlaylistItems(data) {\r\n\t//console.log(data);\r\n\tvar parsedData = [];\r\n\tdata = data.items;\r\n\r\n\tfor (var i = 0; i < data.length; i++) {\r\n\t\tparsedData[i] = parseTrackItem(data[i].track);\r\n\t\tparsedData[i].id = i + 1;\r\n\t\tparsedData[i].addedDate = data[i].added_at;\r\n\t}\r\n\r\n\t//console.log(parsedData);\r\n\treturn parsedData;\r\n}\r\n\r\n// helper helper functions\r\nfunction arrToString(array) {\r\n\tconst arrLen = array.length;\r\n\tvar newString = '';\r\n\r\n\tif (arrLen === 0) {\r\n\t\treturn ' ';\r\n\t}\r\n\t\r\n\tif (arrLen === 1) {\r\n\t\treturn array[0].toString();\r\n\t}\r\n\t\r\n\tfor (var i = 0; i < arrLen; i++) {\r\n\t\tnewString += array[i];\r\n    \r\n\t\tif ((i + 1) < arrLen) {\r\n\t\t\tnewString += ', ';\r\n\t\t}\r\n\t}\r\n\r\n  return newString; \r\n}\r\n\r\nfunction chooseSmallestImage(array) {\r\n\tconst arrLen = array.length;\r\n\t\r\n\tif (arrLen === 0) {\r\n\t\treturn ' ';\r\n\t}\r\n\t\r\n\tif (arrLen === 1) {\r\n\t\treturn array[0].url;\r\n\t}\r\n\t\r\n\tvar smallestImg = array[0];\r\n\t\r\n\tfor (var i = 0; i < arrLen; i++) {\r\n\t\tif (smallestImg.height > array[i].height) {\r\n\t\t\tsmallestImg = array[i];\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn smallestImg.url;\r\n}\r\n\r\nfunction formatDate(timestamp) {\r\n\tconst parsedDate = Date.parse(timestamp);\r\n\tconst dateObj = new Date(parsedDate);\r\n\r\n\tconst day = dateObj.getDate();\r\n\tconst month = dateObj.getMonth() + 1;\r\n\tconst year = dateObj.getFullYear();\r\n\r\n\tconst hour = dateObj.getHours();\r\n\tconst minute = dateObj.getMinutes();\r\n\tconst second = dateObj.getSeconds();\r\n\r\n\tconst formattedDate = `${month}/${day}/${year} - ${hour}:${minute}:${second}`;\r\n\r\n\treturn formattedDate;\r\n}\r\n\r\nexport { parseData, parsePlaylistList, parsePlaylistItems };","import $ from 'jquery';\r\nimport { parseData } from './parseData';\r\n\r\nasync function spotifyRequestMe(accessToken, url) {\r\n\tconst baseURL = 'https://api.spotify.com/v1/me/';\r\n\tvar songData = [];\r\n\t\r\n\t//console.log(baseURL + url);\r\n\t\r\n\tawait $.ajax({\r\n\t\turl: baseURL + url,\r\n\t\theaders: {\r\n\t\t\t'Authorization': 'Bearer ' + accessToken\r\n\t\t},\r\n\t\tsuccess: (response) => {\r\n\t\t\t//console.log(response);\r\n\t\t\tsongData = parseData(response);\r\n\t\t},\r\n\t\terror: (error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t\thandleError(error.status);\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn songData;\r\n}\r\n\r\nasync function spotifyRequestPlaylist(accessToken, url) {\r\n\tvar playlistObj = {};\r\n\t//console.log('requesting: ' + url);\r\n\r\n\tplaylistObj = await $.ajax({\r\n\t\turl: url,\r\n\t\theaders: {\r\n\t\t\t'Authorization': 'Bearer ' + accessToken\r\n\t\t},\r\n\t\tsuccess: (response) => {\r\n\t\t\t//console.log(response);\r\n\t\t\tplaylistObj = response;\r\n\t\t}\r\n\t});\r\n\r\n\treturn playlistObj;\r\n}\r\n\r\nfunction getTop(accessToken, type = 'tracks', timeRange = 'medium_term') {\r\n\tconst limit = 50;\r\n\tconst offset = 0;\r\n\t\r\n\tconst url = ('top/' + type +\r\n\t\t\t\t'?time_range='+ timeRange + \r\n\t\t\t\t'&limit=' + limit +\r\n\t\t\t\t'&offset=' + offset);\r\n\treturn spotifyRequestMe(accessToken, url);\r\n}\r\n\r\nfunction getTopArtists(accessToken, timeRange = 'medium_term') {\r\n\tconst type = 'artists';\r\n\treturn getTop(accessToken, type, timeRange);\r\n}\r\n\r\nfunction getTopTracks(accessToken, timeRange = 'medium_term') {\r\n\tconst type = 'tracks';\r\n\treturn getTop(accessToken, type, timeRange);\r\n}\r\n\r\nfunction getRecentlyPlayed(accessToken, limit = 50) {\r\n\tconst params = ('player/recently-played' + \r\n\t\t\t\t\t'?limit=' + limit);\r\n\treturn spotifyRequestMe(accessToken, params);\r\n}\r\n\r\nfunction getUser(accessToken) {\r\n\treturn spotifyRequestMe(accessToken, '');\r\n}\r\n\r\nfunction getPlaylistList(accessToken, limit = 50, offset = 0) {\r\n\tconst baseURL = 'https://api.spotify.com/v1/me/';\r\n\tconst type = 'playlists';\r\n\tconst params = ('?limit=' + limit +\r\n\t\t\t\t\t'&offset=' + offset)\r\n\r\n\tconst url = baseURL + type + params;\r\n\r\n\treturn spotifyRequestPlaylist(accessToken, url);\r\n}\r\n\r\nfunction getNext(accessToken, url) {\r\n\treturn spotifyRequestPlaylist(accessToken, url);\r\n}\r\n\r\nfunction getPlaylistItems(accessToken, playlistID, limit = 100, offset = 0) {\r\n\tconst baseURL = 'https://api.spotify.com/v1/playlists/'\r\n\tconst url = (baseURL + playlistID + '/tracks' + \r\n\t\t\t\t'?limit=' + limit +\r\n\t\t\t\t'&offset=' + offset\r\n\t\t\t\t);\r\n\r\n\treturn spotifyRequestPlaylist(accessToken, url);\r\n}\r\n\r\nfunction handleError(status) {\r\n\tswitch (status) {\r\n\t\tcase 400: {\r\n\t\t\tconsole.log('400: Bad Request');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 401: {\r\n\t\t\tconsole.log('401: Unauthorized');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 403: {\r\n\t\t\tconsole.log('403: Server refusing to fulfill request');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 404: {\r\n\t\t\tconsole.log('404: Resource could not be found');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 429: {\r\n\t\t\tconsole.log('429: Too many requests; Rate limiting applied');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 502: {\r\n\t\t\tconsole.log('502: Bad Gateway');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 503: {\r\n\t\t\tconsole.log('503: Service Unavailable');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tconsole.log(status);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\twindow.location.replace(process.env.REACT_APP_REDIRECT_URI);\r\n}\r\n\r\nexport { getTopArtists, getTopTracks, getUser, getRecentlyPlayed,\r\n\tgetNext, getPlaylistList, getPlaylistItems\r\n};","import React, { Component } from 'react';\r\n\r\nimport DateAdded from './DateAdded';\r\nimport ReleaseDate from './ReleaseDate';\r\n\r\nimport { getPlaylistItems } from '../../api/apiRequest';\r\nimport { parsePlaylistItems } from '../../api/parseData';\r\n\r\nclass Statistics extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\r\n\t\tthis.state = {\r\n\t\t\tplaylistItems: {}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchPlaylistData();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.selectedPlaylist !== this.props.selectedPlaylist) {\r\n\t\t\tthis.fetchPlaylistData();\r\n\t\t}\r\n\t}\r\n\r\n\tfetchPlaylistData = async () => {\r\n\t\tconst accessToken = this.props.accessToken;\r\n\r\n\t\tvar playlistObj = await getPlaylistItems(accessToken, this.props.selectedPlaylist.id);\r\n\r\n\t\tplaylistObj = await this.props.checkNext(playlistObj);\r\n\r\n\t\tconst playlistItems = parsePlaylistItems(playlistObj);\r\n\r\n\t\tthis.setState({ playlistItems: playlistItems });\r\n\r\n\t\t//console.log(playlistItems);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//console.log(this.props.selectedPlaylist);\r\n\t\t//console.log(this.state.playlistItems);\r\n\r\n\t\tif (this.props.statsMode === 'datesAdded') {\r\n\t\t\treturn (\r\n\t\t\t\t<DateAdded playlistItems={this.state.playlistItems}/>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<ReleaseDate playlistItems={this.state.playlistItems}/>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport { Row, Col, Image, ListGroup } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../../style/content.css';\r\n\r\nclass TopArtistItem extends Component {\r\n\trender() {\r\n\t\tconst imgSize = 50;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<ListGroup.Item action href={this.props.artist.href} style = {{padding: 5}}>\r\n\t\t\t\t<Row >\r\n\t\t\t\t\t<Col xs={1} className='my-auto' style={{textAlign: 'right'}}>\r\n\t\t\t\t\t\t<h3>{this.props.artist.id}</h3>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Image \r\n\t\t\t\t\t\tsrc={this.props.artist.image} \r\n\t\t\t\t\t\theight={imgSize} \r\n\t\t\t\t\t\twidth={imgSize}\r\n\t\t\t\t\t\troundedCircle \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Col className='my-auto'>\r\n\t\t\t\t\t\t<h3 style={{fontSize:20}}> {this.props.artist.title} </h3>\r\n\t\t\t\t\t\t<p style={{margin: 0}}> {this.props.artist.genres} </p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</ListGroup.Item>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// PropTypes\r\nTopArtistItem.propTypes = {\r\n\tartist: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TopArtistItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TopArtistItem from './TopArtistItem';\r\n\r\nclass TopArtists extends Component {\r\n\trender() {\r\n\t\treturn this.props.topArtists.map((artist) => (\r\n\t\t\t< TopArtistItem key={artist.id} artist={artist} />\r\n\t\t));\r\n\t}\r\n}\r\n\r\n// PropTypes\r\nTopArtists.propTypes = {\r\n\ttopArtists: PropTypes.array.isRequired\r\n}\r\n\r\nexport default TopArtists;","import React, { Component } from 'react';\r\nimport { Row, Col, Image, ListGroup } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TopTrackItem extends Component {\r\n\trender() {\r\n\t\tconst imgSize = 50;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<ListGroup.Item action href={this.props.track.href} style = {{padding: 5}}>\r\n\t\t\t\t<Row >\r\n\t\t\t\t\t<Col xs={1} className='my-auto' style={{textAlign: 'right'}}>\r\n\t\t\t\t\t\t<h3>{this.props.track.id}</h3>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Image \r\n\t\t\t\t\t\tsrc={this.props.track.image} \r\n\t\t\t\t\t\theight={imgSize} \r\n\t\t\t\t\t\twidth={imgSize}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Col className='my-auto'>\r\n\t\t\t\t\t\t<h3 style={{fontSize:20}}> {this.props.track.title} </h3>\r\n\t\t\t\t\t\t<p style={{margin: 0, fontSize:16}}> \r\n\t\t\t\t\t\t\t{this.props.track.artistName} - {this.props.track.albumTitle}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</ListGroup.Item>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// PropTypes\r\nTopTrackItem.propTypes = {\r\n\ttrack: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TopTrackItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TopTrackItem from './TopTrackItem';\r\n\r\nclass TopTracks extends Component {\r\n\trender() {\r\n\t\treturn this.props.topTracks.map((track) => (\r\n\t\t\t< TopTrackItem key={track.id} track={track} />\r\n\t\t));\r\n\t\t\r\n\t}\r\n}\r\n\r\n// PropTypes\r\nTopTracks.propTypes = {\r\n\ttopTracks: PropTypes.array.isRequired\r\n}\r\n\r\nexport default TopTracks;","import React, { Component } from 'react';\r\nimport { Row, Col, Image, ListGroup } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HistoryItem extends Component {\r\n\trender() {\r\n\t\tconst imgSize = 50;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<ListGroup.Item action href={this.props.track.href} style = {{padding: 5}}>\r\n\t\t\t\t<Row style={{paddingLeft: 15, paddingRight: 15}}>\r\n\t\t\t\t\t<Image \r\n\t\t\t\t\t\tsrc={this.props.track.image} \r\n\t\t\t\t\t\theight={imgSize} \r\n\t\t\t\t\t\twidth={imgSize}\r\n\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Col className='my-auto'>\r\n\t\t\t\t\t\t<h3 style={{fontSize:20}}> {this.props.track.title} </h3>\r\n\t\t\t\t\t\t<p style={{margin: 0, fontSize:16}}> \r\n\t\t\t\t\t\t\t{this.props.track.artistName} - {this.props.track.albumTitle}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Col>\r\n\r\n                    <Col className='my-auto' style={{textAlign: 'right'}}>\r\n                        <p style={{margin: 0, fontSize:16}}>\r\n                            {this.props.track.playedAt}\r\n                        </p>\r\n                    </Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</ListGroup.Item>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// PropTypes\r\nHistoryItem.propTypes = {\r\n\ttrack: PropTypes.object.isRequired\r\n}\r\n\r\nexport default HistoryItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HistoryItem from './HistoryItem';\r\n\r\nclass History extends Component {\r\n\trender() {\r\n\t\t//console.log(this.props.history);\r\n\r\n\t\treturn this.props.history.map((track) => (\r\n\t\t\t< HistoryItem key={track.id} track={track} />\r\n\t\t));\r\n\t\t\r\n\t}\r\n}\r\n\r\n// PropTypes\r\nHistory.propTypes = {\r\n\thistory: PropTypes.array.isRequired\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass PillNav extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Nav\r\n\t\t\t\tclassName='justify-content-center'\r\n\t\t\t\tvariant='pills'\r\n\t\t\t\tdefaultActiveKey={this.props.timeRange}\r\n\t\t\t\tonSelect={(timeRange) => this.props.updateTimeRangeState(timeRange)}\r\n\t\t\t>\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='short_term'>1 Month</Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t\t\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='medium_term'>6 Months</Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t\t\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='long_term'>All Time</Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t</Nav>\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PillNav;","import React, { Component } from 'react';\r\nimport { NavDropdown } from 'react-bootstrap';\r\n\r\nclass StatsNavDropdown extends Component {\r\n    render() {\r\n        //console.log(this.props.playlist);\r\n\r\n        return (\r\n            <NavDropdown.Item eventKey={this.props.playlist.id}>\r\n                {this.props.playlist.title}\r\n            </NavDropdown.Item>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatsNavDropdown;","import React, { Component } from 'react';\r\nimport { Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport StatsNavDropdown from './StatsNavDropdown';\r\n\r\nclass StatsNav extends Component {\r\n\t\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Nav\r\n\t\t\t\tclassName='justify-content-center'\r\n\t\t\t\tvariant='pills'\t\t\t\r\n\t\t\t>\r\n\t\t\t\t<Nav\r\n\t\t\t\t\tvariant='pills'\r\n\t\t\t\t\tdefaultActiveKey={this.props.statsMode}\r\n\t\t\t\t\tonSelect={(selectedMode) => this.props.chooseMode(selectedMode)}\r\n\t\t\t\t>\t\t\t\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey='datesAdded'>Dates Added</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey='releaseDate'>Release Year</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\r\n\t\t\t\t</Nav>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<NavDropdown \r\n\t\t\t\t\ttitle={this.props.selectedPlaylist.title || 'Playlist Not Found'}\r\n\t\t\t\t\tdefaultactivekey={this.props.selectedPlaylist}\r\n\t\t\t\t\tonSelect={(selectedPlaylist) => this.props.choosePlaylist(selectedPlaylist)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.playlistList.map((playlist) => (\r\n\t\t\t\t\t\t<StatsNavDropdown key={playlist.id} playlist={playlist}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</NavDropdown>\r\n\t\t\t</Nav>\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default StatsNav;","import React, { Component } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nimport Statistics from '../Statistics/Statistics';\r\nimport TopArtists from '../TopArtists/TopArtists';\r\nimport TopTracks from '../TopTracks/TopTracks';\r\nimport History from '../History/History';\r\n\r\nimport PillNav from '../Navigation/PillNav';\r\nimport StatsNav from '../Navigation/StatsNav';\r\n\r\nimport { getTopArtists, getTopTracks, getRecentlyPlayed, getPlaylistList, getNext } from '../../api/apiRequest';\r\nimport { parsePlaylistList } from '../../api/parseData';\r\n\r\nclass Body extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.state = {\t\t\r\n\t\t\ttopArtists: [],\r\n\t\t\ttopTracks: [],\r\n\t\t\tplaylistList: [],\r\n\t\t\thistory: [],\r\n\r\n\t\t\ttimeRange: 'short_term',\r\n\r\n\t\t\tselectedPlaylist: {},\r\n\t\t\t\r\n\t\t\tstatsMode: 'datesAdded',\r\n\t\t};\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\ttry {\r\n\t\t\tthis.fetchTop();\r\n\t\t\tthis.fetchPlaylists();\r\n\t\t\tthis.fetchHistory();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.props.errorFunc();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif ((prevState.timeRange !== this.state.timeRange)) {\r\n\t\t\tthis.fetchTop();\r\n\t\t}\r\n\t}\r\n\r\n\t// fetch data\r\n\tfetchTop = async () => {\r\n\t\tconst accessToken = this.props.hashFragment.accessToken;\r\n\r\n\t\tvar topArtists = getTopArtists(accessToken, this.state.timeRange);\r\n\t\tvar topTracks = getTopTracks(accessToken, this.state.timeRange)\r\n\r\n\t\tthis.setState({ topArtists: await topArtists });\r\n\t\tthis.setState({ topTracks: await topTracks });\r\n\t}\r\n\r\n\tfetchPlaylists = async () => {\r\n\t\tconst accessToken = this.props.hashFragment.accessToken;\r\n\r\n\t\tvar playlistListObj = await getPlaylistList(accessToken);\r\n\r\n\t\tplaylistListObj = await this.checkNext(playlistListObj);\r\n\r\n\t\tconst playlistList = parsePlaylistList(playlistListObj);\r\n\r\n\t\tthis.updatePlaylistList(playlistList);\r\n\t}\r\n\r\n\tfetchHistory = async () => {\r\n\t\tconst accessToken = this.props.hashFragment.accessToken;\r\n\r\n\t\tvar history = await getRecentlyPlayed(accessToken);\r\n\r\n\t\tthis.setState({ history: history });\r\n\r\n\t\t//console.log(this.state.history);\r\n\t}\r\n\r\n\t//helper function for checking if there are more requests to be made\r\n\tcheckNext = async (object) => {\r\n\t\tconst accessToken = this.props.hashFragment.accessToken;\r\n\r\n\t\t//console.log(object);\r\n\r\n\t\tif (object.next !== null) {\r\n\t\t\tvar nextObject = await getNext(accessToken, object.next);\r\n\r\n\t\t\tnextObject = await this.checkNext(nextObject);\r\n\r\n\t\t\tobject.items = object.items.concat(nextObject.items);\r\n\t\t} \r\n\t\t\r\n\t\t//console.log(object);\r\n\t\treturn object;\r\n\t}\r\n\r\n\t// set state helper functions\r\n\tupdatePlaylistList = (playlistList) => {\r\n\t\tthis.setState({ playlistList: playlistList })\r\n\t\tthis.setState({ selectedPlaylist: playlistList[0] })\r\n\t}\r\n\t\r\n\tupdateTimeRangeState = (timeRange) => {\r\n\t\tthis.setState({ timeRange: timeRange });\r\n\t}\r\n\r\n\tupdateStatsModeState = (mode) => {\r\n\t\tthis.setState({ statsMode: mode });\r\n\t}\r\n\r\n\tupdateSelectedPlaylist = (playlistID) => {\r\n\t\tfor (var i = 0; i < this.state.playlistList.length; i++) {\r\n\t\t\tvar playlist = this.state.playlistList[i];\r\n\r\n\t\t\tif (playlistID === playlist.id) {\r\n\t\t\t\tthis.setState({ selectedPlaylist: playlist });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tif (this.props.contentType === 'artists') {\r\n\t\t\treturn (\r\n\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t< PillNav \r\n\t\t\t\t\t\t\ttimeRange={this.state.timeRange} \r\n\t\t\t\t\t\t\tupdateTimeRangeState={this.updateTimeRangeState} \r\n\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\r\n\t\t\t\t\t< TopArtists topArtists={this.state.topArtists} />\r\n\t\t\t\t</ListGroup>\r\n\t\t\t)\r\n\t\t} else if (this.props.contentType === 'tracks') {\r\n\t\t\treturn (\r\n\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t< PillNav \r\n\t\t\t\t\t\t\ttimeRange={this.state.timeRange} \r\n\t\t\t\t\t\t\tupdateTimeRangeState={this.updateTimeRangeState} \r\n\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t</ListGroup.Item>\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t< TopTracks topTracks={this.state.topTracks} />\r\n\t\t\t\t</ListGroup>\r\n\t\t\t)\r\n\t\t} else if (this.props.contentType === 'stats') {\r\n\t\t\treturn (\r\n\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t<StatsNav \r\n\t\t\t\t\t\t\tstatsMode={this.state.statsMode}\r\n\t\t\t\t\t\t\tselectedPlaylist={this.state.selectedPlaylist}\r\n\t\t\t\t\t\t\tplaylistList={this.state.playlistList}\r\n\t\t\t\t\t\t\tchoosePlaylist={this.updateSelectedPlaylist}\r\n\t\t\t\t\t\t\tchooseMode={this.updateStatsModeState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t<Statistics \r\n\t\t\t\t\t\tstatsMode={this.state.statsMode}\r\n\t\t\t\t\t\tselectedPlaylist={this.state.selectedPlaylist}\r\n\t\t\t\t\t\tcheckNext={this.checkNext}\r\n\t\t\t\t\t\taccessToken={this.props.hashFragment.accessToken}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t<History history={this.state.history}/>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Body;","import React, { Component, useState } from 'react';\r\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\r\n\r\nimport About from '../About';\r\n\r\nimport '../../style/footer.css';\r\n\r\nclass Footer extends Component {\r\n\taboutModal = () => {\r\n\t\tconst [show, setShow] = useState(false);\r\n\r\n\t\tconst handleClose = () => setShow(false);\r\n\t\tconst handleShow = () => setShow(true);\r\n\t\t\r\n\t\t//console.log(this.state.userName);\r\n\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button variant='link' onClick={handleShow}>about</Button>\r\n\r\n\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>About</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<About />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t  </Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid className='footer'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<p>Made by Christopher Yung</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<a \r\n\t\t\t\t\t\t\trel='noopener noreferrer' \r\n\t\t\t\t\t\t\ttarget='_blank' \r\n\t\t\t\t\t\t\thref='https://github.com/yung4/spotistics'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tgithub repo\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<this.aboutModal/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n\t\r\n\trender() {\t\r\n\t\treturn (\r\n\t\t\t<Nav \r\n\t\t\t\tfill justify variant='tabs'\r\n\t\t\t\tdefaultActiveKey='artists'\r\n\t\t\t\tonSelect={(selectedView) => (this.props.setView(selectedView))}\r\n\t\t\t>\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='artists'>\r\n\t\t\t\t\t\t<h2>Top Artists</h2>\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t\t\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='tracks'>\r\n\t\t\t\t\t\t<h2>Top Tracks</h2>\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t\t\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='stats'>\r\n\t\t\t\t\t\t<h2>Statistics</h2>\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Nav.Item>\t\r\n\r\n\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t<Nav.Link eventKey='history'>\r\n\t\t\t\t\t\t<h2>History</h2>\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Nav.Item>\r\n\t\t\t</Nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport NavBar from '../Navigation/NavBar';\r\n\r\nimport { getUser } from '../../api/apiRequest';\r\n\r\nclass Home extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tcontentType: 'artists', \r\n\t\t\tuser: {}\r\n\t\t};\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\ttry {\r\n\t\t\tthis.fetchData();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tthis.errorFunc();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevState.contentType !== this.state.contentType) {\r\n\t\t\tthis.fetchData();\r\n\t\t}\r\n\t}\r\n\r\n\tfetchData = async () => {\r\n\t\tvar user = await getUser(this.props.hashFragment.accessToken);\r\n\t\tthis.setState({user: user});\r\n\t}\r\n\t\r\n\terrorFunc = (error) => {\r\n\t\tconsole.log(error);\r\n\t\twindow.location.replace(process.env.REACT_APP_REDIRECT_URI);\r\n\t}\r\n\t\r\n\tsetView = (viewType) => {\r\n\t\tthis.setState({ contentType: viewType });\r\n\t\t//console.log(this.state.contentType);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t< Header user={this.state.user} errorFunc={this.errorFunc}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t< NavBar setView={this.setView}/>\r\n\t\t\t\t\r\n\t\t\t\t\t< Body \r\n\t\t\t\t\t\thashFragment={this.props.hashFragment} \r\n\t\t\t\t\t\tcontentType={this.state.contentType} \r\n\t\t\t\t\t\terrorFunc={this.errorFunc}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Container>\r\n\t\t\t\t\r\n\t\t\t\t< Footer />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","var paramObj = {};\r\n\r\nfunction getAuthorization() {\r\n\tconst urlObj = window.location;\r\n\tconst url = urlObj.href;\r\n\t//const origin = urlObj.origin;\r\n\t\r\n\tif (url.indexOf('#') === -1) {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t//console.log(url);\r\n\t\r\n\tconst params = url.slice(url.indexOf('#'));\r\n\t//console.log(params);\r\n\t\r\n\tconst paramArr = params.split('&');\r\n\t//console.log(paramArr);\r\n\t\r\n\ttry {\r\n\t\tparamObj.accessToken = paramArr[0].slice(paramArr[0].indexOf('=') + 1);\r\n\t\tparamObj.tokenType = paramArr[1].slice(paramArr[1].indexOf('=') + 1);\r\n\t\tparamObj.expiresIn = paramArr[2].slice(paramArr[2].indexOf('=') + 1);\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t//console.log(paramObj);\r\n\t\r\n\treturn true;\r\n}\r\n\r\nexport { getAuthorization, paramObj };","import React, {Component} from 'react';\r\n\r\nimport Login from './components/Login';\r\nimport Home from './components/Content/Home';\r\n\r\nimport { getAuthorization, paramObj } from './api/auth';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tloggedInStatus: false,\r\n\t\t\thashFragment: {},\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({loggedInStatus: getAuthorization()});\r\n\t\tthis.setState({hashFragment: paramObj });\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t//console.log(this.state);\r\n\r\n\t\tif (!this.state.loggedInStatus) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t< Login />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t< Home hashFragment={this.state.hashFragment}/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}